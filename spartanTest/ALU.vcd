$date
	Sat Jan 18 18:12:41 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ALUtb $end
$var wire 1 ! overflow $end
$var wire 12 " bcd [11:0] $end
$var wire 1 # CarryOUT $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 1 & CarryIN $end
$var reg 3 ' opCodeA [2:0] $end
$scope module uut $end
$var wire 4 ( A [3:0] $end
$var wire 4 ) B [3:0] $end
$var wire 1 & CarryIN $end
$var wire 3 * opCodeA [2:0] $end
$var wire 4 + wireY [3:0] $end
$var wire 8 , wireM [7:0] $end
$var wire 4 - wireLA [3:0] $end
$var wire 4 . sub_Y [3:0] $end
$var wire 4 / resultX [3:0] $end
$var wire 4 0 resultO [3:0] $end
$var wire 4 1 resultA [3:0] $end
$var wire 1 ! overflow $end
$var wire 8 2 opwireM [7:0] $end
$var wire 8 3 opCode8 [7:0] $end
$var wire 4 4 lUOutput2 [3:0] $end
$var wire 4 5 lUOutput1 [3:0] $end
$var wire 12 6 bcd [11:0] $end
$var wire 4 7 add_Y [3:0] $end
$var wire 4 8 aUtemp2 [3:0] $end
$var wire 4 9 aUtemp1 [3:0] $end
$var wire 8 : Y [7:0] $end
$var wire 1 # CarryOUT $end
$scope module aU $end
$var wire 4 ; A [3:0] $end
$var wire 4 < B [3:0] $end
$var wire 1 & CarryIN $end
$var wire 1 # CarryOUT $end
$var wire 2 = opCode [1:0] $end
$var wire 1 ! overflow $end
$var wire 1 > tempCAdd $end
$var wire 1 ? tempCSub $end
$var wire 1 @ tempoverflow $end
$var wire 4 A sub_Y [3:0] $end
$var wire 4 B subY [3:0] $end
$var wire 4 C add_Y [3:0] $end
$var wire 4 D addY [3:0] $end
$var wire 1 E CarryOUTSUB $end
$var wire 1 F CarryOUTADD $end
$scope module a1 $end
$var wire 4 G A [3:0] $end
$var wire 4 H B [3:0] $end
$var wire 1 & CarryIN $end
$var wire 1 @ overflow $end
$var wire 4 I Y [3:0] $end
$var wire 1 F CarryOUT $end
$var wire 3 J Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 & Carry $end
$var wire 1 M CarryO $end
$var wire 1 N xor1 $end
$var wire 1 O and2 $end
$var wire 1 P and1 $end
$var wire 1 Q Sum $end
$scope module h1 $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 P Carry $end
$var wire 1 N Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 N A $end
$var wire 1 & B $end
$var wire 1 O Carry $end
$var wire 1 Q Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 T Carry $end
$var wire 1 U CarryO $end
$var wire 1 V xor1 $end
$var wire 1 W and2 $end
$var wire 1 X and1 $end
$var wire 1 Y Sum $end
$scope module h1 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 X Carry $end
$var wire 1 V Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 V A $end
$var wire 1 T B $end
$var wire 1 W Carry $end
$var wire 1 Y Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 \ Carry $end
$var wire 1 ] CarryO $end
$var wire 1 ^ xor1 $end
$var wire 1 _ and2 $end
$var wire 1 ` and1 $end
$var wire 1 a Sum $end
$scope module h1 $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 ` Carry $end
$var wire 1 ^ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 ^ A $end
$var wire 1 \ B $end
$var wire 1 _ Carry $end
$var wire 1 a Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 b A $end
$var wire 1 c B $end
$var wire 1 d Carry $end
$var wire 1 F CarryO $end
$var wire 1 e xor1 $end
$var wire 1 f and2 $end
$var wire 1 g and1 $end
$var wire 1 h Sum $end
$scope module h1 $end
$var wire 1 b A $end
$var wire 1 c B $end
$var wire 1 g Carry $end
$var wire 1 e Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 e A $end
$var wire 1 d B $end
$var wire 1 f Carry $end
$var wire 1 h Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module s1 $end
$var wire 4 i A [3:0] $end
$var wire 4 j B [3:0] $end
$var wire 1 & BorrowIN $end
$var wire 4 k tempB [3:0] $end
$var wire 4 l Y [3:0] $end
$var wire 1 E BorrowOUT $end
$scope module f0 $end
$var wire 1 m A $end
$var wire 1 n B $end
$var wire 1 & BorrowIN $end
$var wire 1 o BorrowOut $end
$var wire 1 p tempD $end
$var wire 1 q tempB2 $end
$var wire 1 r tempB1 $end
$var wire 1 s Difference $end
$scope module hf1 $end
$var wire 1 m A $end
$var wire 1 n B $end
$var wire 1 r Borrow $end
$var wire 1 p Difference $end
$var wire 1 t notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 p A $end
$var wire 1 & B $end
$var wire 1 q Borrow $end
$var wire 1 s Difference $end
$var wire 1 u notA $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 v A $end
$var wire 1 w B $end
$var wire 1 x BorrowIN $end
$var wire 1 y BorrowOut $end
$var wire 1 z tempD $end
$var wire 1 { tempB2 $end
$var wire 1 | tempB1 $end
$var wire 1 } Difference $end
$scope module hf1 $end
$var wire 1 v A $end
$var wire 1 w B $end
$var wire 1 | Borrow $end
$var wire 1 z Difference $end
$var wire 1 ~ notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 z A $end
$var wire 1 x B $end
$var wire 1 { Borrow $end
$var wire 1 } Difference $end
$var wire 1 !" notA $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 "" A $end
$var wire 1 #" B $end
$var wire 1 $" BorrowIN $end
$var wire 1 %" BorrowOut $end
$var wire 1 &" tempD $end
$var wire 1 '" tempB2 $end
$var wire 1 (" tempB1 $end
$var wire 1 )" Difference $end
$scope module hf1 $end
$var wire 1 "" A $end
$var wire 1 #" B $end
$var wire 1 (" Borrow $end
$var wire 1 &" Difference $end
$var wire 1 *" notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 &" A $end
$var wire 1 $" B $end
$var wire 1 '" Borrow $end
$var wire 1 )" Difference $end
$var wire 1 +" notA $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 ." BorrowIN $end
$var wire 1 E BorrowOut $end
$var wire 1 /" tempD $end
$var wire 1 0" tempB2 $end
$var wire 1 1" tempB1 $end
$var wire 1 2" Difference $end
$scope module hf1 $end
$var wire 1 ," A $end
$var wire 1 -" B $end
$var wire 1 1" Borrow $end
$var wire 1 /" Difference $end
$var wire 1 3" notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 /" A $end
$var wire 1 ." B $end
$var wire 1 0" Borrow $end
$var wire 1 2" Difference $end
$var wire 1 4" notA $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module btod1 $end
$var wire 8 5" binary [7:0] $end
$var wire 1 6" empty1 $end
$var wire 1 7" empty2 $end
$var wire 4 8" dab5 [3:0] $end
$var wire 4 9" dab4 [3:0] $end
$var wire 4 :" dab3 [3:0] $end
$var wire 4 ;" dab2 [3:0] $end
$var wire 4 <" dab1 [3:0] $end
$var wire 12 =" bcd [11:0] $end
$scope module d1t $end
$var wire 1 6" A $end
$var wire 1 >" B $end
$var wire 1 ?" C $end
$var wire 1 @" D $end
$var wire 1 A" E $end
$var wire 1 B" X $end
$var wire 1 C" Y $end
$var wire 1 D" Z $end
$var wire 1 E" nor1 $end
$var wire 1 F" nor2 $end
$var wire 1 G" nor3 $end
$var wire 1 H" or1 $end
$var wire 1 I" xor1 $end
$var wire 1 J" xor2 $end
$upscope $end
$scope module d2u $end
$var wire 1 K" A $end
$var wire 1 L" B $end
$var wire 1 M" C $end
$var wire 1 N" D $end
$var wire 1 O" E $end
$var wire 1 P" X $end
$var wire 1 Q" Y $end
$var wire 1 R" Z $end
$var wire 1 S" nor1 $end
$var wire 1 T" nor2 $end
$var wire 1 U" nor3 $end
$var wire 1 V" or1 $end
$var wire 1 W" xor1 $end
$var wire 1 X" xor2 $end
$upscope $end
$scope module d3v $end
$var wire 1 Y" A $end
$var wire 1 Z" B $end
$var wire 1 [" C $end
$var wire 1 \" D $end
$var wire 1 ]" E $end
$var wire 1 ^" X $end
$var wire 1 _" Y $end
$var wire 1 `" Z $end
$var wire 1 a" nor1 $end
$var wire 1 b" nor2 $end
$var wire 1 c" nor3 $end
$var wire 1 d" or1 $end
$var wire 1 e" xor1 $end
$var wire 1 f" xor2 $end
$upscope $end
$scope module d4w $end
$var wire 1 7" A $end
$var wire 1 g" B $end
$var wire 1 h" C $end
$var wire 1 i" D $end
$var wire 1 j" E $end
$var wire 1 k" X $end
$var wire 1 l" Y $end
$var wire 1 m" Z $end
$var wire 1 n" nor1 $end
$var wire 1 o" nor2 $end
$var wire 1 p" nor3 $end
$var wire 1 q" or1 $end
$var wire 1 r" xor1 $end
$var wire 1 s" xor2 $end
$upscope $end
$scope module d5x $end
$var wire 1 t" A $end
$var wire 1 u" B $end
$var wire 1 v" C $end
$var wire 1 w" D $end
$var wire 1 x" E $end
$var wire 1 y" X $end
$var wire 1 z" Y $end
$var wire 1 {" Z $end
$var wire 1 |" nor1 $end
$var wire 1 }" nor2 $end
$var wire 1 ~" nor3 $end
$var wire 1 !# or1 $end
$var wire 1 "# xor1 $end
$var wire 1 ## xor2 $end
$upscope $end
$scope module d6y $end
$var wire 1 $# A $end
$var wire 1 %# B $end
$var wire 1 &# C $end
$var wire 1 '# D $end
$var wire 1 (# E $end
$var wire 1 )# X $end
$var wire 1 *# Y $end
$var wire 1 +# Z $end
$var wire 1 ,# nor1 $end
$var wire 1 -# nor2 $end
$var wire 1 .# nor3 $end
$var wire 1 /# or1 $end
$var wire 1 0# xor1 $end
$var wire 1 1# xor2 $end
$upscope $end
$scope module d7z $end
$var wire 1 2# A $end
$var wire 1 3# B $end
$var wire 1 4# C $end
$var wire 1 5# D $end
$var wire 1 6# E $end
$var wire 1 7# X $end
$var wire 1 8# Y $end
$var wire 1 9# Z $end
$var wire 1 :# nor1 $end
$var wire 1 ;# nor2 $end
$var wire 1 <# nor3 $end
$var wire 1 =# or1 $end
$var wire 1 ># xor1 $end
$var wire 1 ?# xor2 $end
$upscope $end
$upscope $end
$scope module lU $end
$var wire 4 @# A [3:0] $end
$var wire 4 A# B [3:0] $end
$var wire 3 B# opCode [2:0] $end
$var wire 4 C# xor1 [3:0] $end
$var wire 4 D# resultX [3:0] $end
$var wire 4 E# resultO [3:0] $end
$var wire 4 F# resultA [3:0] $end
$var wire 4 G# or1 [3:0] $end
$var wire 4 H# and1 [3:0] $end
$upscope $end
$scope module mU $end
$var wire 4 I# A [3:0] $end
$var wire 4 J# B [3:0] $end
$var wire 1 K# overflow2 $end
$var wire 1 L# overflow1 $end
$var wire 1 M# overflow0 $end
$var wire 4 N# b0 [3:0] $end
$var wire 4 O# a2 [3:0] $end
$var wire 4 P# a1 [3:0] $end
$var wire 4 Q# a0 [3:0] $end
$var wire 8 R# Y [7:0] $end
$var wire 5 S# S2 [4:0] $end
$var wire 5 T# S1 [4:0] $end
$var wire 5 U# S0 [4:0] $end
$scope module add0 $end
$var wire 4 V# A [3:0] $end
$var wire 4 W# B [3:0] $end
$var wire 1 X# CarryIN $end
$var wire 1 M# overflow $end
$var wire 4 Y# Y [3:0] $end
$var wire 1 Z# CarryOUT $end
$var wire 3 [# Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 \# A $end
$var wire 1 ]# B $end
$var wire 1 X# Carry $end
$var wire 1 ^# CarryO $end
$var wire 1 _# xor1 $end
$var wire 1 `# and2 $end
$var wire 1 a# and1 $end
$var wire 1 b# Sum $end
$scope module h1 $end
$var wire 1 \# A $end
$var wire 1 ]# B $end
$var wire 1 a# Carry $end
$var wire 1 _# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 _# A $end
$var wire 1 X# B $end
$var wire 1 `# Carry $end
$var wire 1 b# Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 c# A $end
$var wire 1 d# B $end
$var wire 1 e# Carry $end
$var wire 1 f# CarryO $end
$var wire 1 g# xor1 $end
$var wire 1 h# and2 $end
$var wire 1 i# and1 $end
$var wire 1 j# Sum $end
$scope module h1 $end
$var wire 1 c# A $end
$var wire 1 d# B $end
$var wire 1 i# Carry $end
$var wire 1 g# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 g# A $end
$var wire 1 e# B $end
$var wire 1 h# Carry $end
$var wire 1 j# Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 m# Carry $end
$var wire 1 n# CarryO $end
$var wire 1 o# xor1 $end
$var wire 1 p# and2 $end
$var wire 1 q# and1 $end
$var wire 1 r# Sum $end
$scope module h1 $end
$var wire 1 k# A $end
$var wire 1 l# B $end
$var wire 1 q# Carry $end
$var wire 1 o# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 o# A $end
$var wire 1 m# B $end
$var wire 1 p# Carry $end
$var wire 1 r# Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 s# A $end
$var wire 1 t# B $end
$var wire 1 u# Carry $end
$var wire 1 Z# CarryO $end
$var wire 1 v# xor1 $end
$var wire 1 w# and2 $end
$var wire 1 x# and1 $end
$var wire 1 y# Sum $end
$scope module h1 $end
$var wire 1 s# A $end
$var wire 1 t# B $end
$var wire 1 x# Carry $end
$var wire 1 v# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 v# A $end
$var wire 1 u# B $end
$var wire 1 w# Carry $end
$var wire 1 y# Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module add1 $end
$var wire 4 z# A [3:0] $end
$var wire 4 {# B [3:0] $end
$var wire 1 |# CarryIN $end
$var wire 1 L# overflow $end
$var wire 4 }# Y [3:0] $end
$var wire 1 ~# CarryOUT $end
$var wire 3 !$ Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 "$ A $end
$var wire 1 #$ B $end
$var wire 1 |# Carry $end
$var wire 1 $$ CarryO $end
$var wire 1 %$ xor1 $end
$var wire 1 &$ and2 $end
$var wire 1 '$ and1 $end
$var wire 1 ($ Sum $end
$scope module h1 $end
$var wire 1 "$ A $end
$var wire 1 #$ B $end
$var wire 1 '$ Carry $end
$var wire 1 %$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 %$ A $end
$var wire 1 |# B $end
$var wire 1 &$ Carry $end
$var wire 1 ($ Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 )$ A $end
$var wire 1 *$ B $end
$var wire 1 +$ Carry $end
$var wire 1 ,$ CarryO $end
$var wire 1 -$ xor1 $end
$var wire 1 .$ and2 $end
$var wire 1 /$ and1 $end
$var wire 1 0$ Sum $end
$scope module h1 $end
$var wire 1 )$ A $end
$var wire 1 *$ B $end
$var wire 1 /$ Carry $end
$var wire 1 -$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 -$ A $end
$var wire 1 +$ B $end
$var wire 1 .$ Carry $end
$var wire 1 0$ Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 1$ A $end
$var wire 1 2$ B $end
$var wire 1 3$ Carry $end
$var wire 1 4$ CarryO $end
$var wire 1 5$ xor1 $end
$var wire 1 6$ and2 $end
$var wire 1 7$ and1 $end
$var wire 1 8$ Sum $end
$scope module h1 $end
$var wire 1 1$ A $end
$var wire 1 2$ B $end
$var wire 1 7$ Carry $end
$var wire 1 5$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 5$ A $end
$var wire 1 3$ B $end
$var wire 1 6$ Carry $end
$var wire 1 8$ Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 9$ A $end
$var wire 1 :$ B $end
$var wire 1 ;$ Carry $end
$var wire 1 ~# CarryO $end
$var wire 1 <$ xor1 $end
$var wire 1 =$ and2 $end
$var wire 1 >$ and1 $end
$var wire 1 ?$ Sum $end
$scope module h1 $end
$var wire 1 9$ A $end
$var wire 1 :$ B $end
$var wire 1 >$ Carry $end
$var wire 1 <$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 <$ A $end
$var wire 1 ;$ B $end
$var wire 1 =$ Carry $end
$var wire 1 ?$ Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 4 @$ A [3:0] $end
$var wire 4 A$ B [3:0] $end
$var wire 1 B$ CarryIN $end
$var wire 1 K# overflow $end
$var wire 4 C$ Y [3:0] $end
$var wire 1 D$ CarryOUT $end
$var wire 3 E$ Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 F$ A $end
$var wire 1 G$ B $end
$var wire 1 B$ Carry $end
$var wire 1 H$ CarryO $end
$var wire 1 I$ xor1 $end
$var wire 1 J$ and2 $end
$var wire 1 K$ and1 $end
$var wire 1 L$ Sum $end
$scope module h1 $end
$var wire 1 F$ A $end
$var wire 1 G$ B $end
$var wire 1 K$ Carry $end
$var wire 1 I$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 I$ A $end
$var wire 1 B$ B $end
$var wire 1 J$ Carry $end
$var wire 1 L$ Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 M$ A $end
$var wire 1 N$ B $end
$var wire 1 O$ Carry $end
$var wire 1 P$ CarryO $end
$var wire 1 Q$ xor1 $end
$var wire 1 R$ and2 $end
$var wire 1 S$ and1 $end
$var wire 1 T$ Sum $end
$scope module h1 $end
$var wire 1 M$ A $end
$var wire 1 N$ B $end
$var wire 1 S$ Carry $end
$var wire 1 Q$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 Q$ A $end
$var wire 1 O$ B $end
$var wire 1 R$ Carry $end
$var wire 1 T$ Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 U$ A $end
$var wire 1 V$ B $end
$var wire 1 W$ Carry $end
$var wire 1 X$ CarryO $end
$var wire 1 Y$ xor1 $end
$var wire 1 Z$ and2 $end
$var wire 1 [$ and1 $end
$var wire 1 \$ Sum $end
$scope module h1 $end
$var wire 1 U$ A $end
$var wire 1 V$ B $end
$var wire 1 [$ Carry $end
$var wire 1 Y$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 Y$ A $end
$var wire 1 W$ B $end
$var wire 1 Z$ Carry $end
$var wire 1 \$ Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 _$ Carry $end
$var wire 1 D$ CarryO $end
$var wire 1 `$ xor1 $end
$var wire 1 a$ and2 $end
$var wire 1 b$ and1 $end
$var wire 1 c$ Sum $end
$scope module h1 $end
$var wire 1 ]$ A $end
$var wire 1 ^$ B $end
$var wire 1 b$ Carry $end
$var wire 1 `$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 `$ A $end
$var wire 1 _$ B $end
$var wire 1 a$ Carry $end
$var wire 1 c$ Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module opCd $end
$var wire 3 d$ A [2:0] $end
$var wire 1 e$ and1 $end
$var wire 1 f$ and2 $end
$var wire 1 g$ and3 $end
$var wire 1 h$ and4 $end
$var wire 1 i$ notA $end
$var wire 1 j$ notB $end
$var wire 1 k$ notC $end
$var wire 8 l$ opCode [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100 l$
1k$
0j$
1i$
0h$
0g$
1f$
0e$
b10 d$
0c$
0b$
1a$
1`$
1_$
0^$
1]$
0\$
1[$
0Z$
0Y$
1X$
0W$
1V$
1U$
1T$
0S$
0R$
1Q$
0P$
0O$
1N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
b100 E$
1D$
b10 C$
0B$
b110 A$
b1100 @$
1?$
0>$
0=$
1<$
0;$
0:$
19$
18$
07$
06$
15$
04$
03$
02$
11$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
b0 !$
0~#
b1100 }#
0|#
b0 {#
b1100 z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
b0 [#
0Z#
b0 Y#
0X#
b0 W#
b0 V#
b0 U#
b1100 T#
b10010 S#
b10010000 R#
b0 Q#
b1100 P#
b1100 O#
b0 N#
0M#
0L#
0K#
b1100 J#
b1100 I#
b1100 H#
b1100 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b1100 A#
b1100 @#
1?#
0>#
1=#
0<#
0;#
1:#
19#
08#
07#
06#
05#
14#
03#
02#
11#
10#
1/#
1.#
0-#
0,#
1+#
0*#
1)#
0(#
1'#
1&#
1%#
0$#
1##
0"#
0!#
1~"
0}"
0|"
0{"
0z"
1y"
1x"
0w"
1v"
1u"
0t"
1s"
1r"
1q"
0p"
0o"
1n"
1m"
0l"
0k"
1j"
1i"
1h"
0g"
1f"
1e"
1d"
1c"
0b"
0a"
1`"
0_"
1^"
1]"
0\"
0["
0Z"
1Y"
1X"
0W"
0V"
1U"
0T"
0S"
0R"
1Q"
1P"
0O"
1N"
0M"
0L"
1K"
0J"
0I"
0H"
0G"
1F"
0E"
0D"
1C"
0B"
0A"
0@"
0?"
1>"
b101000100 ="
b10 <"
b11 ;"
b1101 :"
b110z 9"
b1001 8"
07"
06"
b10010000 5"
14"
03"
02"
01"
00"
0/"
0."
1-"
1,"
1+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
1#"
1""
1!"
1~
0}
0|
0{
0z
0y
0x
0w
0v
1u
1t
0s
0r
0q
0p
0o
0n
0m
b0 l
bz000 k
b1100 j
b1100 i
1h
1g
0f
0e
1d
1c
1b
0a
1`
0_
0^
1]
0\
1[
1Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
b100 J
b1000 I
b1100 H
b1100 G
1F
0E
b1000 D
b0 C
b0 B
b0 A
0@
0?
0>
b0 =
b1100 <
b1100 ;
b10010000 :
b0 9
b0 8
b0 7
b101000100 6
b0 5
b0 4
b100 3
b10010000 2
b0 1
b0 0
b0 /
b0 .
b0 -
b10010000 ,
b0 +
b10 *
b1100 )
b1100 (
b10 '
0&
b1100 %
b1100 $
0#
b101000100 "
0!
$end
#5
