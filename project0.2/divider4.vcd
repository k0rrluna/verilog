$date
	Fri Dec 27 21:47:45 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module divider4TB $end
$var wire 3 ! Remainder [2:0] $end
$var wire 4 " Quotient [3:0] $end
$var reg 4 # Dividend [3:0] $end
$var reg 2 $ Divisor [1:0] $end
$scope module uut $end
$var wire 4 % Dividend [3:0] $end
$var wire 2 & Divisor [1:0] $end
$var wire 4 ' Quotient [3:0] $end
$var wire 4 ( Y [3:0] $end
$var wire 1 ) S1 $end
$var wire 1 * S0 $end
$var wire 3 + Remainder [2:0] $end
$var wire 4 , Carry [3:0] $end
$scope module PU1 $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 / Cin $end
$var wire 1 * S $end
$var wire 1 0 notB $end
$var wire 1 1 Y $end
$var wire 1 2 Sum $end
$var wire 1 3 COut $end
$scope module f1 $end
$var wire 1 - A $end
$var wire 1 0 B $end
$var wire 1 / Carry $end
$var wire 1 3 CarryO $end
$var wire 1 4 xor1 $end
$var wire 1 5 and2 $end
$var wire 1 6 and1 $end
$var wire 1 2 Sum $end
$scope module h1 $end
$var wire 1 - A $end
$var wire 1 0 B $end
$var wire 1 6 Carry $end
$var wire 1 4 Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 4 A $end
$var wire 1 / B $end
$var wire 1 5 Carry $end
$var wire 1 2 Sum $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 - A0 $end
$var wire 1 2 A1 $end
$var wire 1 * S $end
$var wire 1 1 Y $end
$var wire 1 7 and1 $end
$var wire 1 8 and2 $end
$var wire 1 9 notS $end
$upscope $end
$upscope $end
$scope module PU2 $end
$var wire 1 : A $end
$var wire 1 ; B $end
$var wire 1 < Cin $end
$var wire 1 * S $end
$var wire 1 = notB $end
$var wire 1 > Y $end
$var wire 1 ? Sum $end
$var wire 1 @ COut $end
$scope module f1 $end
$var wire 1 : A $end
$var wire 1 = B $end
$var wire 1 < Carry $end
$var wire 1 @ CarryO $end
$var wire 1 A xor1 $end
$var wire 1 B and2 $end
$var wire 1 C and1 $end
$var wire 1 ? Sum $end
$scope module h1 $end
$var wire 1 : A $end
$var wire 1 = B $end
$var wire 1 C Carry $end
$var wire 1 A Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 A A $end
$var wire 1 < B $end
$var wire 1 B Carry $end
$var wire 1 ? Sum $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 : A0 $end
$var wire 1 ? A1 $end
$var wire 1 * S $end
$var wire 1 > Y $end
$var wire 1 D and1 $end
$var wire 1 E and2 $end
$var wire 1 F notS $end
$upscope $end
$upscope $end
$scope module PU3 $end
$var wire 1 G A $end
$var wire 1 H B $end
$var wire 1 I Cin $end
$var wire 1 ) S $end
$var wire 1 J notB $end
$var wire 1 K Y $end
$var wire 1 L Sum $end
$var wire 1 M COut $end
$scope module f1 $end
$var wire 1 G A $end
$var wire 1 J B $end
$var wire 1 I Carry $end
$var wire 1 M CarryO $end
$var wire 1 N xor1 $end
$var wire 1 O and2 $end
$var wire 1 P and1 $end
$var wire 1 L Sum $end
$scope module h1 $end
$var wire 1 G A $end
$var wire 1 J B $end
$var wire 1 P Carry $end
$var wire 1 N Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 N A $end
$var wire 1 I B $end
$var wire 1 O Carry $end
$var wire 1 L Sum $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 G A0 $end
$var wire 1 L A1 $end
$var wire 1 ) S $end
$var wire 1 K Y $end
$var wire 1 Q and1 $end
$var wire 1 R and2 $end
$var wire 1 S notS $end
$upscope $end
$upscope $end
$scope module PU4 $end
$var wire 1 T A $end
$var wire 1 U B $end
$var wire 1 V Cin $end
$var wire 1 ) S $end
$var wire 1 W notB $end
$var wire 1 X Y $end
$var wire 1 Y Sum $end
$var wire 1 Z COut $end
$scope module f1 $end
$var wire 1 T A $end
$var wire 1 W B $end
$var wire 1 V Carry $end
$var wire 1 Z CarryO $end
$var wire 1 [ xor1 $end
$var wire 1 \ and2 $end
$var wire 1 ] and1 $end
$var wire 1 Y Sum $end
$scope module h1 $end
$var wire 1 T A $end
$var wire 1 W B $end
$var wire 1 ] Carry $end
$var wire 1 [ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 [ A $end
$var wire 1 V B $end
$var wire 1 \ Carry $end
$var wire 1 Y Sum $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 T A0 $end
$var wire 1 Y A1 $end
$var wire 1 ) S $end
$var wire 1 X Y $end
$var wire 1 ^ and1 $end
$var wire 1 _ and2 $end
$var wire 1 ` notS $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1`
0_
0^
0]
0\
1[
0Z
1Y
0X
1W
0V
0U
0T
1S
0R
0Q
0P
0O
1N
0M
1L
0K
1J
0I
0H
0G
1F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
1;
0:
19
18
07
06
05
14
03
12
11
00
0/
1.
1-
b0 ,
b0 +
0*
0)
b1000 (
b1000 '
b10 &
b1000 %
b10 $
b1000 #
b1000 "
b0 !
$end
#10
0\
0V
b0 !
b0 +
1?
1>
0M
1L
1K
b0 ,
0Z
1Y
b1111 "
b1111 '
b1111 (
1X
0J
0W
1A
1E
0P
1N
1R
0]
1[
1_
1H
1U
1:
1G
1T
b11 $
b11 &
b1111 #
b1111 %
#20
1V
b11 !
b11 +
1M
0L
b11 ,
1Z
1Y
1P
0N
1]
0[
02
b111 "
b111 '
b111 (
01
1J
1W
04
08
0H
0U
0-
b10 $
b10 &
b111 #
b111 %
#30
0Z
b0 !
b0 +
0V
0]
1[
12
11
0?
0>
b0 ,
0M
0L
b1001 "
b1001 '
b1001 (
0K
0J
0W
14
18
0A
0E
0P
0N
0R
1H
1U
1-
0:
0G
b11 $
b11 &
b1001 #
b1001 %
#40
1^
1V
1M
1O
0S
0Q
0`
b110 !
b110 +
1I
1)
b110 ,
1@
1C
12
01
0?
1>
0L
0K
1Y
b101 "
b101 '
b101 (
1X
10
1=
14
08
0A
1E
1N
0R
0[
0_
0.
0;
0-
1:
1G
0T
b1 $
b1 &
b110 #
b110 %
#50
1Q
1L
1K
0R
0X
1Z
1B
09
0F
0D
0S
0`
0^
0O
1\
0Y
1<
1*
b111 !
b111 +
1I
1)
1P
0N
1[
13
02
01
b1111 ,
1@
0?
b10 "
b10 '
b10 (
0>
1J
1W
16
04
08
0C
1A
0E
0H
0U
1-
0:
b0 $
b0 &
b1010 #
b1010 %
#60
