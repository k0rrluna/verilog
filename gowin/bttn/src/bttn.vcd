$date
	Sat Jan 18 22:18:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module bttnTB $end
$var wire 12 ! Y [11:0] $end
$var reg 4 " A [3:0] $end
$var reg 4 # B [3:0] $end
$var reg 3 $ opCodeA [2:0] $end
$var reg 2 % select [1:0] $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 3 ( opCodeA [2:0] $end
$var wire 2 ) select [1:0] $end
$var wire 1 * wire2 $end
$var wire 1 + wire1 $end
$var wire 12 , selectY [11:0] $end
$var wire 12 - Y [11:0] $end
$scope module a1 $end
$var wire 4 . A [3:0] $end
$var wire 4 / B [3:0] $end
$var wire 1 0 CarryIN $end
$var wire 3 1 opCodeA [2:0] $end
$var wire 4 2 wireY [3:0] $end
$var wire 8 3 wireM [7:0] $end
$var wire 4 4 wireLA [3:0] $end
$var wire 4 5 sub_Y [3:0] $end
$var wire 4 6 resultX [3:0] $end
$var wire 4 7 resultO [3:0] $end
$var wire 4 8 resultA [3:0] $end
$var wire 1 * overflow $end
$var wire 8 9 opwireM [7:0] $end
$var wire 8 : opCode8 [7:0] $end
$var wire 4 ; lUOutput2 [3:0] $end
$var wire 4 < lUOutput1 [3:0] $end
$var wire 12 = bcd [11:0] $end
$var wire 4 > add_Y [3:0] $end
$var wire 4 ? aUtemp2 [3:0] $end
$var wire 4 @ aUtemp1 [3:0] $end
$var wire 8 A Y [7:0] $end
$var wire 1 + CarryOUT $end
$scope module aU $end
$var wire 4 B A [3:0] $end
$var wire 4 C B [3:0] $end
$var wire 1 0 CarryIN $end
$var wire 1 + CarryOUT $end
$var wire 2 D opCode [1:0] $end
$var wire 1 * overflow $end
$var wire 1 E tempCAdd $end
$var wire 1 F tempCSub $end
$var wire 1 G tempoverflow $end
$var wire 4 H sub_Y [3:0] $end
$var wire 4 I subY [3:0] $end
$var wire 4 J add_Y [3:0] $end
$var wire 4 K addY [3:0] $end
$var wire 1 L CarryOUTSUB $end
$var wire 1 M CarryOUTADD $end
$scope module a1 $end
$var wire 4 N A [3:0] $end
$var wire 4 O B [3:0] $end
$var wire 1 0 CarryIN $end
$var wire 1 G overflow $end
$var wire 4 P Y [3:0] $end
$var wire 1 M CarryOUT $end
$var wire 3 Q Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 0 Carry $end
$var wire 1 T CarryO $end
$var wire 1 U xor1 $end
$var wire 1 V and2 $end
$var wire 1 W and1 $end
$var wire 1 X Sum $end
$scope module h1 $end
$var wire 1 R A $end
$var wire 1 S B $end
$var wire 1 W Carry $end
$var wire 1 U Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 U A $end
$var wire 1 0 B $end
$var wire 1 V Carry $end
$var wire 1 X Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 Y A $end
$var wire 1 Z B $end
$var wire 1 [ Carry $end
$var wire 1 \ CarryO $end
$var wire 1 ] xor1 $end
$var wire 1 ^ and2 $end
$var wire 1 _ and1 $end
$var wire 1 ` Sum $end
$scope module h1 $end
$var wire 1 Y A $end
$var wire 1 Z B $end
$var wire 1 _ Carry $end
$var wire 1 ] Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 ] A $end
$var wire 1 [ B $end
$var wire 1 ^ Carry $end
$var wire 1 ` Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 c Carry $end
$var wire 1 d CarryO $end
$var wire 1 e xor1 $end
$var wire 1 f and2 $end
$var wire 1 g and1 $end
$var wire 1 h Sum $end
$scope module h1 $end
$var wire 1 a A $end
$var wire 1 b B $end
$var wire 1 g Carry $end
$var wire 1 e Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 e A $end
$var wire 1 c B $end
$var wire 1 f Carry $end
$var wire 1 h Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 i A $end
$var wire 1 j B $end
$var wire 1 k Carry $end
$var wire 1 M CarryO $end
$var wire 1 l xor1 $end
$var wire 1 m and2 $end
$var wire 1 n and1 $end
$var wire 1 o Sum $end
$scope module h1 $end
$var wire 1 i A $end
$var wire 1 j B $end
$var wire 1 n Carry $end
$var wire 1 l Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 l A $end
$var wire 1 k B $end
$var wire 1 m Carry $end
$var wire 1 o Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module s1 $end
$var wire 4 p A [3:0] $end
$var wire 4 q B [3:0] $end
$var wire 1 0 BorrowIN $end
$var wire 4 r tempB [3:0] $end
$var wire 4 s Y [3:0] $end
$var wire 1 L BorrowOUT $end
$scope module f0 $end
$var wire 1 t A $end
$var wire 1 u B $end
$var wire 1 0 BorrowIN $end
$var wire 1 v BorrowOut $end
$var wire 1 w tempD $end
$var wire 1 x tempB2 $end
$var wire 1 y tempB1 $end
$var wire 1 z Difference $end
$scope module hf1 $end
$var wire 1 t A $end
$var wire 1 u B $end
$var wire 1 y Borrow $end
$var wire 1 w Difference $end
$var wire 1 { notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 w A $end
$var wire 1 0 B $end
$var wire 1 x Borrow $end
$var wire 1 z Difference $end
$var wire 1 | notA $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 } A $end
$var wire 1 ~ B $end
$var wire 1 !" BorrowIN $end
$var wire 1 "" BorrowOut $end
$var wire 1 #" tempD $end
$var wire 1 $" tempB2 $end
$var wire 1 %" tempB1 $end
$var wire 1 &" Difference $end
$scope module hf1 $end
$var wire 1 } A $end
$var wire 1 ~ B $end
$var wire 1 %" Borrow $end
$var wire 1 #" Difference $end
$var wire 1 '" notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 #" A $end
$var wire 1 !" B $end
$var wire 1 $" Borrow $end
$var wire 1 &" Difference $end
$var wire 1 (" notA $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 +" BorrowIN $end
$var wire 1 ," BorrowOut $end
$var wire 1 -" tempD $end
$var wire 1 ." tempB2 $end
$var wire 1 /" tempB1 $end
$var wire 1 0" Difference $end
$scope module hf1 $end
$var wire 1 )" A $end
$var wire 1 *" B $end
$var wire 1 /" Borrow $end
$var wire 1 -" Difference $end
$var wire 1 1" notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 -" A $end
$var wire 1 +" B $end
$var wire 1 ." Borrow $end
$var wire 1 0" Difference $end
$var wire 1 2" notA $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 3" A $end
$var wire 1 4" B $end
$var wire 1 5" BorrowIN $end
$var wire 1 L BorrowOut $end
$var wire 1 6" tempD $end
$var wire 1 7" tempB2 $end
$var wire 1 8" tempB1 $end
$var wire 1 9" Difference $end
$scope module hf1 $end
$var wire 1 3" A $end
$var wire 1 4" B $end
$var wire 1 8" Borrow $end
$var wire 1 6" Difference $end
$var wire 1 :" notA $end
$upscope $end
$scope module hf2 $end
$var wire 1 6" A $end
$var wire 1 5" B $end
$var wire 1 7" Borrow $end
$var wire 1 9" Difference $end
$var wire 1 ;" notA $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module btod1 $end
$var wire 8 <" binary [7:0] $end
$var wire 1 =" empty1 $end
$var wire 1 >" empty2 $end
$var wire 4 ?" dab5 [3:0] $end
$var wire 4 @" dab4 [3:0] $end
$var wire 4 A" dab3 [3:0] $end
$var wire 4 B" dab2 [3:0] $end
$var wire 4 C" dab1 [3:0] $end
$var wire 12 D" bcd [11:0] $end
$scope module d1t $end
$var wire 1 =" A $end
$var wire 1 E" B $end
$var wire 1 F" C $end
$var wire 1 G" D $end
$var wire 1 H" E $end
$var wire 1 I" X $end
$var wire 1 J" Y $end
$var wire 1 K" Z $end
$var wire 1 L" nor1 $end
$var wire 1 M" nor2 $end
$var wire 1 N" nor3 $end
$var wire 1 O" or1 $end
$var wire 1 P" xor1 $end
$var wire 1 Q" xor2 $end
$upscope $end
$scope module d2u $end
$var wire 1 R" A $end
$var wire 1 S" B $end
$var wire 1 T" C $end
$var wire 1 U" D $end
$var wire 1 V" E $end
$var wire 1 W" X $end
$var wire 1 X" Y $end
$var wire 1 Y" Z $end
$var wire 1 Z" nor1 $end
$var wire 1 [" nor2 $end
$var wire 1 \" nor3 $end
$var wire 1 ]" or1 $end
$var wire 1 ^" xor1 $end
$var wire 1 _" xor2 $end
$upscope $end
$scope module d3v $end
$var wire 1 `" A $end
$var wire 1 a" B $end
$var wire 1 b" C $end
$var wire 1 c" D $end
$var wire 1 d" E $end
$var wire 1 e" X $end
$var wire 1 f" Y $end
$var wire 1 g" Z $end
$var wire 1 h" nor1 $end
$var wire 1 i" nor2 $end
$var wire 1 j" nor3 $end
$var wire 1 k" or1 $end
$var wire 1 l" xor1 $end
$var wire 1 m" xor2 $end
$upscope $end
$scope module d4w $end
$var wire 1 >" A $end
$var wire 1 n" B $end
$var wire 1 o" C $end
$var wire 1 p" D $end
$var wire 1 q" E $end
$var wire 1 r" X $end
$var wire 1 s" Y $end
$var wire 1 t" Z $end
$var wire 1 u" nor1 $end
$var wire 1 v" nor2 $end
$var wire 1 w" nor3 $end
$var wire 1 x" or1 $end
$var wire 1 y" xor1 $end
$var wire 1 z" xor2 $end
$upscope $end
$scope module d5x $end
$var wire 1 {" A $end
$var wire 1 |" B $end
$var wire 1 }" C $end
$var wire 1 ~" D $end
$var wire 1 !# E $end
$var wire 1 "# X $end
$var wire 1 ## Y $end
$var wire 1 $# Z $end
$var wire 1 %# nor1 $end
$var wire 1 &# nor2 $end
$var wire 1 '# nor3 $end
$var wire 1 (# or1 $end
$var wire 1 )# xor1 $end
$var wire 1 *# xor2 $end
$upscope $end
$scope module d6y $end
$var wire 1 +# A $end
$var wire 1 ,# B $end
$var wire 1 -# C $end
$var wire 1 .# D $end
$var wire 1 /# E $end
$var wire 1 0# X $end
$var wire 1 1# Y $end
$var wire 1 2# Z $end
$var wire 1 3# nor1 $end
$var wire 1 4# nor2 $end
$var wire 1 5# nor3 $end
$var wire 1 6# or1 $end
$var wire 1 7# xor1 $end
$var wire 1 8# xor2 $end
$upscope $end
$scope module d7z $end
$var wire 1 9# A $end
$var wire 1 :# B $end
$var wire 1 ;# C $end
$var wire 1 <# D $end
$var wire 1 =# E $end
$var wire 1 ># X $end
$var wire 1 ?# Y $end
$var wire 1 @# Z $end
$var wire 1 A# nor1 $end
$var wire 1 B# nor2 $end
$var wire 1 C# nor3 $end
$var wire 1 D# or1 $end
$var wire 1 E# xor1 $end
$var wire 1 F# xor2 $end
$upscope $end
$upscope $end
$scope module lU $end
$var wire 4 G# A [3:0] $end
$var wire 4 H# B [3:0] $end
$var wire 3 I# opCode [2:0] $end
$var wire 4 J# xor1 [3:0] $end
$var wire 4 K# resultX [3:0] $end
$var wire 4 L# resultO [3:0] $end
$var wire 4 M# resultA [3:0] $end
$var wire 4 N# or1 [3:0] $end
$var wire 4 O# and1 [3:0] $end
$upscope $end
$scope module mU $end
$var wire 4 P# A [3:0] $end
$var wire 4 Q# B [3:0] $end
$var wire 1 R# overflow2 $end
$var wire 1 S# overflow1 $end
$var wire 1 T# overflow0 $end
$var wire 4 U# b0 [3:0] $end
$var wire 4 V# a2 [3:0] $end
$var wire 4 W# a1 [3:0] $end
$var wire 4 X# a0 [3:0] $end
$var wire 8 Y# Y [7:0] $end
$var wire 5 Z# S2 [4:0] $end
$var wire 5 [# S1 [4:0] $end
$var wire 5 \# S0 [4:0] $end
$scope module add0 $end
$var wire 4 ]# A [3:0] $end
$var wire 4 ^# B [3:0] $end
$var wire 1 _# CarryIN $end
$var wire 1 T# overflow $end
$var wire 4 `# Y [3:0] $end
$var wire 1 a# CarryOUT $end
$var wire 3 b# Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 c# A $end
$var wire 1 d# B $end
$var wire 1 _# Carry $end
$var wire 1 e# CarryO $end
$var wire 1 f# xor1 $end
$var wire 1 g# and2 $end
$var wire 1 h# and1 $end
$var wire 1 i# Sum $end
$scope module h1 $end
$var wire 1 c# A $end
$var wire 1 d# B $end
$var wire 1 h# Carry $end
$var wire 1 f# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 f# A $end
$var wire 1 _# B $end
$var wire 1 g# Carry $end
$var wire 1 i# Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 j# A $end
$var wire 1 k# B $end
$var wire 1 l# Carry $end
$var wire 1 m# CarryO $end
$var wire 1 n# xor1 $end
$var wire 1 o# and2 $end
$var wire 1 p# and1 $end
$var wire 1 q# Sum $end
$scope module h1 $end
$var wire 1 j# A $end
$var wire 1 k# B $end
$var wire 1 p# Carry $end
$var wire 1 n# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 n# A $end
$var wire 1 l# B $end
$var wire 1 o# Carry $end
$var wire 1 q# Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 r# A $end
$var wire 1 s# B $end
$var wire 1 t# Carry $end
$var wire 1 u# CarryO $end
$var wire 1 v# xor1 $end
$var wire 1 w# and2 $end
$var wire 1 x# and1 $end
$var wire 1 y# Sum $end
$scope module h1 $end
$var wire 1 r# A $end
$var wire 1 s# B $end
$var wire 1 x# Carry $end
$var wire 1 v# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 v# A $end
$var wire 1 t# B $end
$var wire 1 w# Carry $end
$var wire 1 y# Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 z# A $end
$var wire 1 {# B $end
$var wire 1 |# Carry $end
$var wire 1 a# CarryO $end
$var wire 1 }# xor1 $end
$var wire 1 ~# and2 $end
$var wire 1 !$ and1 $end
$var wire 1 "$ Sum $end
$scope module h1 $end
$var wire 1 z# A $end
$var wire 1 {# B $end
$var wire 1 !$ Carry $end
$var wire 1 }# Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 }# A $end
$var wire 1 |# B $end
$var wire 1 ~# Carry $end
$var wire 1 "$ Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module add1 $end
$var wire 4 #$ A [3:0] $end
$var wire 4 $$ B [3:0] $end
$var wire 1 %$ CarryIN $end
$var wire 1 S# overflow $end
$var wire 4 &$ Y [3:0] $end
$var wire 1 '$ CarryOUT $end
$var wire 3 ($ Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 )$ A $end
$var wire 1 *$ B $end
$var wire 1 %$ Carry $end
$var wire 1 +$ CarryO $end
$var wire 1 ,$ xor1 $end
$var wire 1 -$ and2 $end
$var wire 1 .$ and1 $end
$var wire 1 /$ Sum $end
$scope module h1 $end
$var wire 1 )$ A $end
$var wire 1 *$ B $end
$var wire 1 .$ Carry $end
$var wire 1 ,$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 ,$ A $end
$var wire 1 %$ B $end
$var wire 1 -$ Carry $end
$var wire 1 /$ Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 0$ A $end
$var wire 1 1$ B $end
$var wire 1 2$ Carry $end
$var wire 1 3$ CarryO $end
$var wire 1 4$ xor1 $end
$var wire 1 5$ and2 $end
$var wire 1 6$ and1 $end
$var wire 1 7$ Sum $end
$scope module h1 $end
$var wire 1 0$ A $end
$var wire 1 1$ B $end
$var wire 1 6$ Carry $end
$var wire 1 4$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 4$ A $end
$var wire 1 2$ B $end
$var wire 1 5$ Carry $end
$var wire 1 7$ Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 8$ A $end
$var wire 1 9$ B $end
$var wire 1 :$ Carry $end
$var wire 1 ;$ CarryO $end
$var wire 1 <$ xor1 $end
$var wire 1 =$ and2 $end
$var wire 1 >$ and1 $end
$var wire 1 ?$ Sum $end
$scope module h1 $end
$var wire 1 8$ A $end
$var wire 1 9$ B $end
$var wire 1 >$ Carry $end
$var wire 1 <$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 <$ A $end
$var wire 1 :$ B $end
$var wire 1 =$ Carry $end
$var wire 1 ?$ Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 @$ A $end
$var wire 1 A$ B $end
$var wire 1 B$ Carry $end
$var wire 1 '$ CarryO $end
$var wire 1 C$ xor1 $end
$var wire 1 D$ and2 $end
$var wire 1 E$ and1 $end
$var wire 1 F$ Sum $end
$scope module h1 $end
$var wire 1 @$ A $end
$var wire 1 A$ B $end
$var wire 1 E$ Carry $end
$var wire 1 C$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 C$ A $end
$var wire 1 B$ B $end
$var wire 1 D$ Carry $end
$var wire 1 F$ Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module add2 $end
$var wire 4 G$ A [3:0] $end
$var wire 4 H$ B [3:0] $end
$var wire 1 I$ CarryIN $end
$var wire 1 R# overflow $end
$var wire 4 J$ Y [3:0] $end
$var wire 1 K$ CarryOUT $end
$var wire 3 L$ Carry4 [2:0] $end
$scope module f0 $end
$var wire 1 M$ A $end
$var wire 1 N$ B $end
$var wire 1 I$ Carry $end
$var wire 1 O$ CarryO $end
$var wire 1 P$ xor1 $end
$var wire 1 Q$ and2 $end
$var wire 1 R$ and1 $end
$var wire 1 S$ Sum $end
$scope module h1 $end
$var wire 1 M$ A $end
$var wire 1 N$ B $end
$var wire 1 R$ Carry $end
$var wire 1 P$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 P$ A $end
$var wire 1 I$ B $end
$var wire 1 Q$ Carry $end
$var wire 1 S$ Sum $end
$upscope $end
$upscope $end
$scope module f1 $end
$var wire 1 T$ A $end
$var wire 1 U$ B $end
$var wire 1 V$ Carry $end
$var wire 1 W$ CarryO $end
$var wire 1 X$ xor1 $end
$var wire 1 Y$ and2 $end
$var wire 1 Z$ and1 $end
$var wire 1 [$ Sum $end
$scope module h1 $end
$var wire 1 T$ A $end
$var wire 1 U$ B $end
$var wire 1 Z$ Carry $end
$var wire 1 X$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 X$ A $end
$var wire 1 V$ B $end
$var wire 1 Y$ Carry $end
$var wire 1 [$ Sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 \$ A $end
$var wire 1 ]$ B $end
$var wire 1 ^$ Carry $end
$var wire 1 _$ CarryO $end
$var wire 1 `$ xor1 $end
$var wire 1 a$ and2 $end
$var wire 1 b$ and1 $end
$var wire 1 c$ Sum $end
$scope module h1 $end
$var wire 1 \$ A $end
$var wire 1 ]$ B $end
$var wire 1 b$ Carry $end
$var wire 1 `$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 `$ A $end
$var wire 1 ^$ B $end
$var wire 1 a$ Carry $end
$var wire 1 c$ Sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 d$ A $end
$var wire 1 e$ B $end
$var wire 1 f$ Carry $end
$var wire 1 K$ CarryO $end
$var wire 1 g$ xor1 $end
$var wire 1 h$ and2 $end
$var wire 1 i$ and1 $end
$var wire 1 j$ Sum $end
$scope module h1 $end
$var wire 1 d$ A $end
$var wire 1 e$ B $end
$var wire 1 i$ Carry $end
$var wire 1 g$ Sum $end
$upscope $end
$scope module h2 $end
$var wire 1 g$ A $end
$var wire 1 f$ B $end
$var wire 1 h$ Carry $end
$var wire 1 j$ Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module opCd $end
$var wire 3 k$ A [2:0] $end
$var wire 1 l$ and1 $end
$var wire 1 m$ and2 $end
$var wire 1 n$ and3 $end
$var wire 1 o$ and4 $end
$var wire 1 p$ notA $end
$var wire 1 q$ notB $end
$var wire 1 r$ notC $end
$var wire 8 s$ opCode [7:0] $end
$upscope $end
$upscope $end
$scope module s1 $end
$var wire 4 t$ A [3:0] $end
$var wire 12 u$ ALUY [11:0] $end
$var wire 4 v$ B [3:0] $end
$var wire 3 w$ opCodeA [2:0] $end
$var wire 2 x$ select [1:0] $end
$var reg 12 y$ Y [11:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b110 y$
b1 x$
b0 w$
b110 v$
b111 u$
b1 t$
b1 s$
1r$
1q$
1p$
1o$
0n$
0m$
0l$
b0 k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
b0 L$
0K$
b0 J$
0I$
b0 H$
b0 G$
0F$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
03$
02$
01$
00$
1/$
0.$
0-$
1,$
0+$
0*$
1)$
b0 ($
0'$
b1 &$
0%$
b0 $$
b1 #$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
1i#
0h#
0g#
1f#
0e#
0d#
1c#
b0 b#
0a#
b1 `#
0_#
b0 ^#
b1 ]#
b1 \#
b1 [#
b0 Z#
b110 Y#
b1 X#
b1 W#
b0 V#
b0 U#
0T#
0S#
0R#
b110 Q#
b1 P#
b0 O#
b111 N#
b0 M#
b0 L#
b0 K#
b111 J#
b0 I#
b110 H#
b1 G#
1F#
1E#
1D#
0C#
0B#
1A#
1@#
0?#
0>#
1=#
1<#
1;#
0:#
09#
08#
07#
16#
05#
14#
13#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
1)#
1(#
0'#
0&#
1%#
0$#
0##
0"#
1!#
1~"
0}"
0|"
0{"
0z"
0y"
1x"
0w"
1v"
1u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
1k"
0j"
1i"
1h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
1]"
0\"
1["
1Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
1O"
0N"
1M"
1L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
b111 D"
b0 C"
b0 B"
b0 A"
b0z @"
b1000 ?"
0>"
0="
b111 <"
1;"
1:"
19"
08"
17"
06"
15"
04"
03"
02"
11"
00"
1/"
0."
1-"
1,"
1+"
1*"
0)"
0("
1'"
1&"
1%"
0$"
1#"
1""
0!"
1~
0}
0|
0{
1z
0y
0x
1w
0v
0u
1t
b1011 s
bz110 r
b110 q
b1 p
0o
0n
0m
0l
0k
0j
0i
1h
0g
0f
1e
0d
0c
1b
0a
1`
0_
0^
1]
0\
0[
1Z
0Y
1X
0W
0V
1U
0T
0S
1R
b0 Q
b111 P
b110 O
b1 N
0M
1L
b111 K
b111 J
b1011 I
b0 H
0G
0F
0E
b1 D
b110 C
b1 B
b111 A
b111 @
b0 ?
b111 >
b111 =
b0 <
b0 ;
b1 :
b110 9
b0 8
b0 7
b0 6
b0 5
b111 4
b0 3
b111 2
b0 1
00
b110 /
b1 .
b110 -
b111 ,
0+
0*
b1 )
b0 (
b110 '
b1 &
b1 %
b0 $
b110 #
b1 "
b110 !
$end
#5
